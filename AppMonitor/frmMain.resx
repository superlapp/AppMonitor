<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>104, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABS
        CQAAAk1TRnQBSQFMAgEBAgEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8A/wAkAAMTARoDIAExAyEBMwMhATMDIQEzAyEBMwMaASUDBwEKIAADDQES
        AxwBKQMhATMDIQEzAyEBMwMgATEDFQEenAADBAEGAyEBMwE0AVcBbAGbAQcBdAG1AfkBAgF2AboB/wEC
        AXYBugH/AQIBdgG6Af8BAgF2AbkB/wElAWgBjgHJATEBOQE+AVwDEwEaFAADBAEGAx8BLgE1AUkBVQF8
        AR4BbQGaAdkBBQF2AbgB/wEFAXYBuAH/AQUBdgG4Af8BCgF1AbQB+QExAV4BdwGqAyEBMwMKAQ6QAAME
        AQYBLAEwATIBSwEUAYcByQH/ATIBnwHdAf8BTgG3AfIB/wFVAb4B+gH/AVUBvgH8Af8BVAG9AfoB/wFU
        AbsB9gH/AUMBqwHlAf8BHgGMAcwB/wEzAVYBawGaAxgBIgwAAwQBBgEtATEBMwFNASUBfAGvAekBPQGg
        AdcB/wFUAbIB5AH/AWYBvgHuAf8BZgG+Ae4B/wFmAb4B7gH/AV8BuwHqAf8BQwGkAdoB/wEhAYwByAH/
        ATQBQQFIAWoDDwEViAADAQECASwBMAEyAUoBPgGiAdsB/wGvAdUB4wH/AfkB9QHpAf8B4QGvAXYB/wG4
        AXABHAH/AbcBcwEiAf8BuAFwARwB/wHeAawBdAH/AfEB+QH9Af8BpwHbAfgB/wFJAawB4gH/ATQBagGJ
        AbkDFwEhCAABLAEvATIBSgE8AZ8B2AH/AUMBpwHgAf8BFgGGAc0B/wECAXgBxQH/AQIBeAHFAf8BAgF4
        AcUB/wECAXgBxAH/AQgBewHHAf8BIQGPAdIB/wFBAaYB3wH/AUgBqQHdAf8BOQFSAWABiQMYASKEAAEj
        AiQBNQFNAa0B4wH/AeQB4gHQAv8B8gHaAf8B0gGnAXMB/wGoAXQBMAH/AZgBjAFgAf8BkQGVAXUB/wGX
        AY0BYwH/AaUBdQExAf8BygGbAWMH/wH3Af8BggHFAegB/wE+AXIBjwG5AxkBIwMdASsBSQGjAdYB+AEt
        AZgB2AH/ARkBigHPAf8BGwGLAdAB/wEcAYsB0AH/ARwBjAHQAf8BHAGMAdAB/wEcAYwB0AH/ARwBiwHQ
        Af8BGwGKAc8B/wEZAYkBzwH/ASYBkwHWAf8BSwGtAeIB/wE/AXABjAG5AxkBI4AAAVgBnQHDAd0B7QHg
        AckC/wHpAcsB/wH8AfAB3gH/AaYBagEgAf8BkwGOAWUB/wEZARwBIwH/ARYBGAEdAf8BFgEaAR4B/wGG
        AYIBXgH/AaEBaAEcAv8B+QHzAv8B/AHzAv8B/AHtAf8B6gHtAegB/wFWAYIBmwG+AVcBmwHAAd4BPAGk
        AeEB/wEyAZwB2wH/ATIBnAHbAf8BMgGcAdsB/wEyAZwB2wH/ATIBnAHbAf8BMgGcAdsB/wEyAZwB2wH/
        ATIBnAHbAf8BMgGcAdsB/wExAZsB2wH/ATABmwHbAf8BMAGbAdsB/wFDAagB4gH/AVIBgQGcAb6AAAED
        AXgBuwH+AVsBngG8Av8B7QHLAv8B8gHeAf8BpgFvASgB/wGMAZYBeQH/ARcBGAEeAf8BGgEbAR0B/wJa
        AV0B/wGiAacBmQH/AbsBlQFhAf8B8AHfAcsC/wH6Ae4C/wH+AekB/wFeAaQBxwH/AQEBdgG6Af8BCwF6
        AbsB/wEdAYsByAH/AU0BsgHqAf8BSQGvAecB/wFHAa0B5gH/AUYBrAHlAf8BRgGsAeUB/wFGAawB5QH/
        AUYBrAHlAf8BRgGsAeUB/wFGAawB5QH/AUcBrQHmAf8BSQGvAecB/wFNAbIB6gH/AR0BiwHIAf8BFwF3
        Aa0B7IAAASEBJgEoATIBAAFxAbkB/wFZAZ4BvwL/AfcB2gH/AbIBbwEgAf8BmgGOAWIB/wEbARwBHwH/
        ARMBEgEVAf8CmQGaAf8B0AHLAbgB/wHbAboBkgP/AfIC/wH1AeUB/wFbAaIBxgH/AQABcgG4Af8BFgEX
        ARgBHgEiASYBKAEyAQQBdQG2Af8BGAGFAcMB/wFfAcEB8QH/AWEBwgH0Af8BXgG/AfIB/wFdAb4B8QH/
        AV0BvgHxAf8BXQG+AfEB/wFdAb8B8QH/AV8BwAHyAf8BYgHCAfQB/wFeAcEB8QH/ARcBhQHCAf8BBgF2
        AbcB/wEXARkBGgEghAABOgFqAYgBqgEAAXMBuQH/ARUBgwHCAf8BiwGFAWcB/wG+AXoBKAH/AasBjAFQ
        Af8BnwGPAV4B/wHtAdcBugL/AeMBxgH/AeUB3QHOAf8BlAG/AdEB/wESAXwBugH/AQEBdwG9Af8BNAFB
        AUkBWggAATsBVwFoAYIBCAF3AboB/wEGAXcBuAH/AToBogHYAf8BZwHGAfUB/wF1AdIC/wF1AdEB/gH/
        AXUB0QH+Af8BdgHSAv8BVwG6AeoB/wExAZwB0wH/AQYBdgG3Af8BDgF8Ab8B/wEVARcBGAEdjAABPQFu
        AYsBqgEUAYMBygH/AQMBewHGAf8BAAF2AcIB/wEAAXYBwgH/AQABdQG/Af8BAAFxAbsB/wEAAW4BtwH/
        AQABcgG6Af8BBAF5AcAB/wEYAYYBywH/ASwBNAE5AUYQAAFBAWUBfAGWARkBhQHHAf8BCwF7AbwB/wEA
        AXEBswH/AQABbwGxAf8BAAFvAbEB/wEAAW8BsQH/AQABbwGxAf8BBgF1AbcB/wERAX0BwAH/ASUBiQHH
        AfgBFwEYARkBH5QAASMBJwEqATMBPwF4AZ0BvAEpAZIB1wH/ASoBkgHXAf8BKgGSAdcB/wEpAZEB1gH/
        ASkBkQHWAf8BLQGOAc4B9wE+AVoBbAGCHAADCAEKAUEBbgGMAakBLwGNAcwB9QErAZEB1QH/ASsBkQHV
        Af8BKwGRAdUB/wErAZEB1QH/ATwBgAGtAc8BNQFCAUoBWv8A/wD/AJMAAUIBTQE+BwABPgMAASgDAAFA
        AwABEAMAAQEBAAEBBQABgBcAA/8BAAT/BAAE/wQAAfABDwHwAR8EAAHAAQcBwAEHBAABgAEDAYABAwUA
        AQEBgAEBJAABgAEBAYABAQQAAcABAwHAAQMEAAHgAQ8B4AEPBAAE/wQABP8EAAT/BAAL
</value>
  </data>
</root>